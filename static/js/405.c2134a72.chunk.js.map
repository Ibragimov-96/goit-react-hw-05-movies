{"version":3,"file":"static/js/405.c2134a72.chunk.js","mappings":"mIACA,IADY,kC,oHCECA,EAAQC,EAAAA,GAAAA,MAAH,iEAILC,EAAMD,EAAAA,GAAAA,OAAH,iOAYHE,EAAOF,EAAAA,GAAAA,KAAH,uFAKJG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,8FAMRK,EAAQL,EAAAA,GAAAA,GAAH,qE,qDC2DlB,EAlFe,WACb,OAAoCM,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAOF,EAAaG,IAAI,QAGxBC,EAAG,4DAAwDC,EAAAA,EAAxD,kBAAqEH,GAWxEI,GAAWC,EAAAA,EAAAA,MAuBjB,OArBAC,EAAAA,EAAAA,YAAU,WACHN,GAGLO,MAAML,GACHM,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,OAAO,IAAIC,MAAJ,iJACvB,IACAN,MAAK,SAAAO,GACJ,GAA6B,IAAzBA,EAAMC,QAAQC,OAGhB,OAFAC,EAAAA,EAAAA,IAAM,oKACNtB,EAAc,IAGhBA,EAAcmB,EAAMC,QACrB,GACJ,GAAE,CAACd,EAAKF,KAEP,iCACE,UAACV,EAAD,CAAM6B,UAAU,aAAaC,SAlCb,SAAAC,GAClBA,EAAEC,iBAEmC,KAAjCD,EAAEE,OAAOC,SAASxB,KAAKyB,OAI3B1B,EAAgB,CAAEC,KAAMqB,EAAEE,OAAOC,SAASxB,KAAKyB,OAChD,EA0BG,WACE,SAACtC,EAAD,CACEuC,KAAK,OACLP,UAAU,mBACVQ,KAAK,OACLC,YAAY,6BAEd,SAACvC,EAAD,CAAK8B,UAAU,oBAAf,UACE,2CAGJ,mBAEA,0BACE,SAAC1B,EAAD,UACGE,EAAWkC,KAAI,SAAAd,GACd,OACE,yBACE,UAACxB,EAAD,CAAUuC,GAAE,kBAAaf,EAAMgB,IAAMC,MAAO,CAAEC,KAAM7B,GAApD,WACE,gBACE8B,IACEnB,EAAMoB,YAAN,0CACuCpB,EAAMoB,aACzCC,EAENC,IAAKtB,EAAMoB,eAGb,uBAAIpB,EAAMuB,YAXLvB,EAAMgB,GAelB,SAGL,SAAC,KAAD,MAGL,C","sources":["Key.js","pages/Movies/MoviesStyle.js","pages/Movies/Movies.jsx"],"sourcesContent":["const KEY = 'e0c9e70823fc3aecb2aebaf743b1938c'\nexport default KEY","import styled from 'styled-components';\nimport { Link,} from 'react-router-dom';\nexport const Input = styled.input`\n  padding: 10px;\n  border-radius: 5px;\n`;\nexport const Btn = styled.button`\n  padding: 10px;\n  background-color: #7b2ec7;\n  color: white;\n  border: none;\n  font-size: 15px;\n  border-radius: 5px;\n  &:hover {\n    background-color: #f9f529;\n    color: rgb(3, 3, 3);\n  }\n`;\nexport const Form = styled.form`\nmargin-top:20px;\ndisplay: flex;\ngap: 15px;\nmargin-left:20px;`\nexport const LinkFilm = styled(Link)`\ntext-decoration:none;\nfont-size:19px;\nfont-weight:bold;\ncolor:black` \n\nexport const Films = styled.ul`\nflex-wrap:wrap;\ndisplay: flex;\ngap: 15px;\n`\n\n","import { Input, Btn, Form, LinkFilm, Films } from './MoviesStyle';\nimport { Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport img from '../../img/error.png';\nimport KEY from 'Key';\nconst Movies = () => {\n  const [searchFilm, setSearchFilm] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const film = searchParams.get('film');\n\n \n  const API = `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${film}`;\n\n  const handleFilms = e => {\n    e.preventDefault();\n\n    if (e.target.elements.film.value === '') {\n      return;\n    }\n\n    setSearchParams({ film: e.target.elements.film.value });\n  };\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!film) {\n      return;\n    }\n    fetch(API)\n      .then(responce => {\n        if (responce.ok) {\n          return responce.json();\n        }\n\n        return Promise.reject(new Error(`Нет таких картинок фильмов`));\n      })\n      .then(films => {\n        if (films.results.length === 0) {\n          toast('Нет фильмов с таким названием ');\n          setSearchFilm([]);\n          return;\n        }\n        setSearchFilm(films.results);\n      });\n  }, [API, film]);\n  return (\n    <>\n      <Form className=\"SearchForm\" onSubmit={handleFilms}>\n        <Input\n          name=\"film\"\n          className=\"SearchForm-input\"\n          type=\"text\"\n          placeholder=\"Search images and films\"\n        />\n        <Btn className=\"SearchForm-button\">\n          <span>Search</span>\n        </Btn>\n      </Form>\n      <br />\n\n      <div>\n        <Films>\n          {searchFilm.map(films => {\n            return (\n              <li key={films.id}>\n                <LinkFilm to={`/movies/${films.id}`} state={{ from: location }}>\n                  <img\n                    src={\n                      films.poster_path\n                        ? `https://image.tmdb.org/t/p/w300/${films.poster_path}`\n                        : img\n                    }\n                    alt={films.poster_path}\n                  />\n\n                  <p>{films.title}</p>\n                </LinkFilm>\n              </li>\n            );\n          })}\n        </Films>\n      </div>\n      <Outlet />\n    </>\n  );\n};\nexport default Movies;\n"],"names":["Input","styled","Btn","Form","LinkFilm","Link","Films","useState","searchFilm","setSearchFilm","useSearchParams","searchParams","setSearchParams","film","get","API","KEY","location","useLocation","useEffect","fetch","then","responce","ok","json","Promise","reject","Error","films","results","length","toast","className","onSubmit","e","preventDefault","target","elements","value","name","type","placeholder","map","to","id","state","from","src","poster_path","img","alt","title"],"sourceRoot":""}