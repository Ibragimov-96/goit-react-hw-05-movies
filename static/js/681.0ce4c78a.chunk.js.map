{"version":3,"file":"static/js/681.0ce4c78a.chunk.js","mappings":"mIACA,IADY,kC,6GCECA,E,OAASC,GAAAA,EAAH,qE,iBC2CnB,EAzCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAGMC,EAAG,6CAAyCL,EAAzC,4BAAoEM,EAAAA,GAe7E,OAbAC,EAAAA,EAAAA,YAAU,WACRC,MAAMH,GACHI,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,OAAO,IAAIC,MAAJ,sDACvB,IACAN,MAAK,SAAAN,GACJC,EAASD,EAAMa,QAChB,GACJ,GAAE,CAACX,EAAKL,IACY,IAAjBG,EAAMc,QACD,yDAGP,iCACE,wBACGd,EAAMe,KAAI,SAAAC,GACT,OACE,2BACE,UAACrB,EAAD,sBAAiBqB,EAAKC,WACtB,mBACA,uBAAID,EAAKE,YAHFF,EAAKG,GAMjB,OAEH,SAAC,KAAD,MAGL,C","sources":["Key.js","pages/Reviews/ReviewsStyle.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["const KEY = 'e0c9e70823fc3aecb2aebaf743b1938c'\nexport default KEY","import styled from 'styled-components';\n\nexport const Author = styled.p`\nfont-size:20px;\nfont-weight:bold;\nmargin:0;`\n","import { useParams, Outlet } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { Author } from './ReviewsStyle';\nimport KEY from 'Key';\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [films, setFilms] = useState([]);\n\n  \n  const API = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}`;\n\n  useEffect(() => {\n    fetch(API)\n      .then(responce => {\n        if (responce.ok) {\n          return responce.json();\n        }\n\n        return Promise.reject(new Error(`Нет таких `));\n      })\n      .then(films => {\n        setFilms(films.results);\n      });\n  }, [API, movieId]);\n  if (films.length === 0) {\n    return <p>No information about reviews</p>;\n  }\n  return (\n    <>\n      <ul>\n        {films.map(film => {\n          return (\n            <li key={film.id}>\n              <Author>Author: {film.author}</Author>\n              <br />\n              <p>{film.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n      <Outlet />\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["Author","styled","movieId","useParams","useState","films","setFilms","API","KEY","useEffect","fetch","then","responce","ok","json","Promise","reject","Error","results","length","map","film","author","content","id"],"sourceRoot":""}